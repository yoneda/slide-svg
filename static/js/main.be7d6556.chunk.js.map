{"version":3,"sources":["components/Slide.module.css","components/ProgramableSlide.module.css","resources/next.svg","resources/prev.svg","components/SettingBox.module.css","components/ProgressBar.module.css","components/Buttons.module.css","components/Background.module.css","containers/AppContainer.module.css","content.md","components/Slide.js","components/ProgramableSlide.js","components/NextButton.js","components/PrevButton.js","components/SettingBox.js","components/SettingProgressBox.js","components/SettingThemeBox.js","constants/constants.js","components/ProgressBar.js","components/Buttons.js","components/Background.js","containers/AppContainer.js","actions/actions.js","utils/convertSighToHtml.js","containers/EmptyContainerForEventListener.js","containers/App.js","reducers/reducer.js","index.js","utils/convertMarkdownToHtml.js"],"names":["module","exports","Slide","Content","EditBox","PreviewBox","__webpack_require__","p","SettingBox","ProgressBar","Buttons","Background","AppContainer","_ref","text","content","color","__html","react_default","a","createElement","className","styles","style","dangerouslySetInnerHTML","ProgramableSlide","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","localCode","code","codeUpdateHandler","bind","assertThisInitialized","console","log","nextprops","event","newCode","target","value","setState","spellcheck","onChange","React","Component","NextButton","moveNextSlideHandler","width","height","backgroundImage","concat","next","backgroundColor","cursor","border","outline","onClick","PrevButton","movePrevSlideHandler","prev","marginRight","settingProgressBox","settingThemeBox","SettingProgressBox","isProgressBarAppeared","changeProgressBarOnHandler","changeProgressBarOffHandler","type","checked","SettingThemeBox","theme","selectSimpleHandler","selectDarkHandler","selectClearSkyHandler","closeMenuHandler","changeTheme","parcentage","buttons","map","button","index","connect","isMenuOpen","slides","rawMarkdown","dispatch","moveNextSlideAction","movePrevSlideAction","changeProgressBarOnAction","changeProgressBarOffAction","openMenuAction","closeMenuAction","changeThemeDarkAction","changeThemeSimpleAction","changeThemeClearskyAction","openMenuHandler","changeThemeDarkHandler","changeThemeSimpleHandler","changeThemeClearskyHandler","length","themeColor","ThemeSimple","ThemeDark","ThemeClearsky","sigh","converted","replace","isNormalSlide","htmlCode","indexOf","components_Buttons","components_PrevButton","key","components_NextButton","components_Slide","textColor","components_ProgramableSlide","components_ProgressBar","components_SettingBox","components_SettingProgressBox","components_SettingThemeBox","components_Background","keyfunction","useEffect","document","addEventListener","removeEventListener","App","containers_AppContainer","containers_EmptyContainerForEventListener","reducer","arguments","undefined","action","nowIndex","htmlList","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","fetch","markdownPath","then","res","raw","marked","setOptions","headerIds","split","markdown","getCreateSlides","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.be7d6556.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slide\":\"Slide_Slide__3lazy\",\"Content\":\"Slide_Content__gHuT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditBox\":\"ProgramableSlide_EditBox__1jCyc\",\"PreviewBox\":\"ProgramableSlide_PreviewBox__1EVvf\"};","module.exports = __webpack_public_path__ + \"static/media/next.4685b698.svg\";","module.exports = __webpack_public_path__ + \"static/media/prev.a6ef98f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingBox\":\"SettingBox_SettingBox__3c9sa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProgressBar\":\"ProgressBar_ProgressBar__msNY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Buttons\":\"Buttons_Buttons__1pI7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Background_Background__2g9i2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__V0twD\"};","module.exports = __webpack_public_path__ + \"static/media/content.d918e463.md\";","import React from \"react\";\nimport styles from \"./Slide.module.css\";\n\nconst Slide = ({ text, color }) => {\n  const content = { __html: text };\n  return (\n      <div className={styles.Slide}>\n      <div className={styles.Content} style={styles} dangerouslySetInnerHTML={content} />\n      </div>\n  );\n};\n\nexport default Slide;\n","import React from \"react\";\nimport styles from \"./ProgramableSlide.module.css\";\n\nclass ProgramableSlide extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {localCode: this.props.code};\n    this.codeUpdateHandler = this.codeUpdateHandler.bind(this);\n    console.log(\"初期化初期化\");\n  }\n  componentWillUpdate(nextprops){\n    /*\n    if(this.state.localCode !== nextprops.code){\n      this.setState({localCode:nextprops.code});\n    }*/\n  }\n  codeUpdateHandler(event){\n    const newCode = event.target.value;\n    console.log(\"newCode\");\n    console.log(newCode);\n    this.setState({localCode:newCode});\n  }\n  render(){\n    return (\n      <div>\n        <textarea spellcheck=\"false\" value={this.state.localCode} onChange={this.codeUpdateHandler} className={styles.EditBox}></textarea>\n        <div className={styles.PreviewBox}>\n        <div dangerouslySetInnerHTML={{ __html: this.state.localCode }}></div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ProgramableSlide;\n","import React from \"react\";\nimport next from \"../resources/next.svg\";\n\nconst NextButton = ({ moveNextSlideHandler }) => {\n  const styles = {\n    width: \"55px\",\n    height: \"55px\",\n    backgroundImage: `url(${next})`,\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    border: \"none\",\n    outline: \"none\",\n  }\n  return(\n    <div>\n      <button style={styles} onClick={moveNextSlideHandler}></button>\n    </div>\n  )\n};\n\nexport default NextButton;\n","import React from \"react\";\nimport prev from \"../resources/prev.svg\";\n\nconst PrevButton = ({ movePrevSlideHandler }) => {\n  //const styles = {backgroundImage: `url(${prev})`,width:\"55px\",height:\"55px\"};\n  const styles = {\n    width: \"55px\",\n    height: \"55px\",\n    backgroundImage: `url(${prev})`,\n    marginRight: \"12px\",\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    border: \"none\",\n    outline: \"none\",\n  }\n  return(\n    <div>\n      <button style={styles} onClick={movePrevSlideHandler}></button>\n    </div>\n  )\n};\n\nexport default PrevButton;\n","import React from \"react\";\nimport styles from \"./SettingBox.module.css\";\n\nconst SettingBox = ({ settingProgressBox, settingThemeBox }) => {\n  return (\n    <div className={styles.SettingBox}>\n      {settingProgressBox}\n      {settingThemeBox}\n    </div>\n  );\n};\n\nexport default SettingBox;\n","import React from \"react\";\n\nconst SettingProgressBox = ({\n  isProgressBarAppeared,\n  changeProgressBarOnHandler,\n  changeProgressBarOffHandler\n}) => {\n  return (\n    <div>\n      <p>progress bar?</p>\n      <p>\n        <input\n          type=\"radio\"\n          checked={isProgressBarAppeared === true}\n          onChange={changeProgressBarOnHandler}\n        />\n        on\n        <input\n          type=\"radio\"\n          checked={isProgressBarAppeared === false}\n          onChange={changeProgressBarOffHandler}\n        />\n        off\n      </p>\n    </div>\n  );\n};\n\nexport default SettingProgressBox;\n","import React from \"react\";\nimport { THEME_SIMPLE, THEME_RED, THEME_DARK, THEME_CLEARSKY } from \"../constants/constants.js\";\n\nconst SettingThemeBox = ({\n  theme,\n  selectSimpleHandler,\n  selectDarkHandler,\n  selectClearSkyHandler,\n  closeMenuHandler\n}) => {\n  const changeTheme = event => {\n    const value = event.target.value;\n    if (value === THEME_DARK) selectDarkHandler();\n    else if (value === THEME_SIMPLE) selectSimpleHandler();\n    else if (value === THEME_CLEARSKY) selectClearSkyHandler();\n    closeMenuHandler();\n  };\n  return (\n    <div>\n      <p>theme?</p>\n      <select value={theme} onChange={event => changeTheme(event)}>\n        <option value={THEME_SIMPLE}>simple</option>\n        <option value={THEME_DARK}>dark</option>\n        <option value={THEME_CLEARSKY}>clear sky</option>\n      </select>\n    </div>\n  );\n};\n\nexport default SettingThemeBox;\n","export const OPEN_MENU = \"OPEN_MENU\";\nexport const CLOSE_MENU = \"CLOSE_MENU\";\nexport const MOVE_NEXT_SLIDE = \"MOVE_NEXT_SLIDE\";\nexport const MOVE_PREV_SLIDE = \"MOVE_PREV_SLIDE\";\nexport const CHANGE_PROGRESSBAR_ON = \"CHANGE_PROGRESSBAR_ON\";\nexport const CHANGE_PROGRESSBAR_OFF = \"CHANGE_PROGRESSBAR_OFF\";\nexport const CREATE_SLIDES = \"CREATE_SLIDES\";\nexport const CHANGE_THEME_DARK = \"CHANGE_THEME_DARK\";\nexport const CHANGE_THEME_SIMPLE = \"CHANGE_THEME_SIMPLE\";\nexport const CHANGE_THEME_CLEARSKY = \"CHANGE_THEME_CLEARSKY\";\n\n// テーマ変更のための定数\nexport const THEME_SIMPLE = \"THEME_SIMPLE\";\nexport const THEME_RED = \"THEME_RED\";\nexport const THEME_DARK = \"THEME_DARK\";\nexport const THEME_CLEARSKY = \"THEME_CLEARSKY\";\n","import React from \"react\";\nimport styles from \"./ProgressBar.module.css\";\n\nconst ProgressBar = ({ parcentage, color }) => {\n  const style = { width: `${parcentage}%`, backgroundColor: color };\n  return <div className={styles.ProgressBar} style={style} />;\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport styles from \"./Buttons.module.css\";\n\nconst Buttons = ({ buttons }) => (\n  <div className={styles.Buttons}>\n    {buttons.map((button, index) => {\n      return button;\n    })}\n  </div>\n);\n\nexport default Buttons;\n","import React from \"react\";\nimport styles from \"./Background.module.css\";\n\nconst Background = ({ color }) => {\n  const style = { backgroundColor: color };\n  return <div className={styles.Background} style={style} />;\n};\n\nexport default Background;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Slide from \"../components/Slide.js\";\nimport ProgramableSlide from \"../components/ProgramableSlide.js\";\nimport NextButton from \"../components/NextButton.js\";\nimport PrevButton from \"../components/PrevButton.js\";\nimport SettingBox from \"../components/SettingBox.js\";\nimport SettingProgressBox from \"../components/SettingProgressBox.js\";\nimport SettingThemeBox from \"../components/SettingThemeBox.js\";\nimport ProgressBar from \"../components/ProgressBar.js\";\nimport Buttons from \"../components/Buttons.js\";\nimport Background from \"../components/Background.js\";\nimport ThemeSimple from \"../themes/simple.json\";\nimport ThemeDark from \"../themes/dark.json\";\nimport ThemeClearsky from \"../themes/clearsky.json\";\nimport { THEME_SIMPLE, THEME_RED, THEME_DARK, THEME_CLEARSKY } from \"../constants/constants.js\";\nimport styles from \"./AppContainer.module.css\";\nimport {\n  getMoveNextSlide,\n  getMovePrevSlide,\n  getChangeProgressBarOn,\n  getChangeProgressBarOff,\n  getOpenMenu,\n  getCloseMenu,\n  getChangeThemeSimple,\n  getChangeThemeDark,\n  getChangeThemeRed,\n  getChangeThemeClearsky\n} from \"../actions/actions.js\";\nimport { convertSignToHtml } from \"../utils/convertSighToHtml\";\nimport { convertMarkdownToHtml } from \"../utils/convertMarkdownToHtml\";\n\nconst AppContainer = ({\n  isMenuOpen,\n  isProgressBarAppeared,\n  theme,\n  index,\n  slides,\n  moveNextSlideHandler,\n  movePrevSlideHandler,\n  changeProgressBarOnHandler,\n  changeProgressBarOffHandler,\n  openMenuHandler,\n  closeMenuHandler,\n  changeThemeSimpleHandler,\n  changeThemeDarkHandler,\n  changeThemeClearskyHandler\n}) => {\n  const parcentage = (index / (slides.length - 1)) * 100;\n  let themeColor = {};\n  if (theme === THEME_SIMPLE) themeColor = ThemeSimple;\n  else if (theme === THEME_DARK) themeColor = ThemeDark;\n  else if (theme === THEME_CLEARSKY) themeColor = ThemeClearsky;\n\n  // コーディング付きのスライド / 通常のスライド の出し分け\n  const converted = slides[index]?slides[index].replace(\"<p>\",\"\").replace(\"</p>\",\"\").replace(\"\\n\",\"\"):\"\";\n  let isNormalSlide = true;\n  let htmlCode = \"\";\n  if(converted.indexOf(\"CODE\")===0){\n    isNormalSlide = false;\n    htmlCode = convertSignToHtml(converted);\n  }\n\n  return (\n    <div>\n      <div className={styles.AppContainer}>\n        <Buttons\n          buttons={[\n            <PrevButton key={2} movePrevSlideHandler={movePrevSlideHandler} />,\n            <NextButton key={1} moveNextSlideHandler={moveNextSlideHandler} />,\n          ]}\n        />\n        {isNormalSlide?\n          <Slide text={slides[index]} color={themeColor.textColor} />\n          :\n          <ProgramableSlide code={htmlCode} />\n        }\n        {isProgressBarAppeared ? (\n          <ProgressBar parcentage={parcentage} color={\"#ff1493\"} />\n        ) : (\n          \"\"\n        )}\n        {isMenuOpen ? (\n          <SettingBox\n            settingProgressBox={\n              <SettingProgressBox\n                isProgressBarAppeared={isProgressBarAppeared}\n                changeProgressBarOnHandler={changeProgressBarOnHandler}\n                changeProgressBarOffHandler={changeProgressBarOffHandler}\n              />\n            }\n            settingThemeBox={\n              <SettingThemeBox\n                theme={theme}\n                selectSimpleHandler={changeThemeSimpleHandler}\n                selectDarkHandler={changeThemeDarkHandler}\n                selectClearSkyHandler={changeThemeClearskyHandler}\n                closeMenuHandler={closeMenuHandler}\n              />\n            }\n          />\n        ) : (\n          \"\"\n        )}\n        <Background color={themeColor.backgroundColor} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isMenuOpen: state.isMenuOpen,\n    isProgressBarAppeared: state.isProgressBarAppeared,\n    theme: state.theme,\n    index: state.index,\n    slides: state.slides,\n    rawMarkdown: state.rawMarkdown\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const moveNextSlideAction = getMoveNextSlide();\n  const movePrevSlideAction = getMovePrevSlide();\n  const changeProgressBarOnAction = getChangeProgressBarOn();\n  const changeProgressBarOffAction = getChangeProgressBarOff();\n  const openMenuAction = getOpenMenu();\n  const closeMenuAction = getCloseMenu();\n  const changeThemeDarkAction = getChangeThemeDark();\n  const changeThemeSimpleAction = getChangeThemeSimple();\n  const changeThemeClearskyAction = getChangeThemeClearsky();\n  return {\n    moveNextSlideHandler: () => dispatch(moveNextSlideAction),\n    movePrevSlideHandler: () => dispatch(movePrevSlideAction),\n    changeProgressBarOnHandler: () => dispatch(changeProgressBarOnAction),\n    changeProgressBarOffHandler: () => dispatch(changeProgressBarOffAction),\n    openMenuHandler: () => dispatch(openMenuAction),\n    closeMenuHandler: () => dispatch(closeMenuAction),\n    changeThemeDarkHandler: () => dispatch(changeThemeDarkAction),\n    changeThemeSimpleHandler: () => dispatch(changeThemeSimpleAction),\n    changeThemeClearskyHandler: () => dispatch(changeThemeClearskyAction)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppContainer);\n","import {\n  OPEN_MENU,\n  CLOSE_MENU,\n  MOVE_NEXT_SLIDE,\n  MOVE_PREV_SLIDE,\n  CHANGE_PROGRESSBAR_ON,\n  CHANGE_PROGRESSBAR_OFF,\n  CHANGE_THEME_SIMPLE,\n  CHANGE_THEME_DARK,\n  CHANGE_THEME_CLEARSKY,\n  CREATE_SLIDES\n} from \"../constants/constants.js\";\n\nexport const getMoveNextSlide = () => {\n  return {\n    type: MOVE_NEXT_SLIDE\n  };\n};\n\nexport const getMovePrevSlide = () => {\n  return {\n    type: MOVE_PREV_SLIDE\n  };\n};\n\nexport const getChangeProgressBarOn = () => {\n  return {\n    type: CHANGE_PROGRESSBAR_ON\n  };\n};\n\nexport const getChangeProgressBarOff = () => {\n  return {\n    type: CHANGE_PROGRESSBAR_OFF\n  };\n};\n\nexport const getOpenMenu = () => {\n  return {\n    type: OPEN_MENU\n  };\n};\n\nexport const getCloseMenu = () => {\n  return {\n    type: CLOSE_MENU\n  };\n};\n\nexport const getChangeThemeSimple = () => {\n  return {\n    type: CHANGE_THEME_SIMPLE\n  };\n};\n\nexport const getChangeThemeDark = () => {\n  return {\n    type: CHANGE_THEME_DARK\n  };\n};\n\nexport const getChangeThemeClearsky = () => {\n  return {\n    type: CHANGE_THEME_CLEARSKY\n  };\n};\n\nexport const getCreateSlides = htmlList => {\n  return {\n    type: CREATE_SLIDES,\n    payload: { htmlList: htmlList }\n  };\n};\n","export const convertSignToHtml = sigh => {\n  if(sigh===\"CODEA\"){\n    return(\n`<svg width=\"200px\" height=\"200px\" viewbox=\"0 0 200 200\">\n  <!-- 直線 -->\n  <line x1=\"10\" y1=\"50\" x2=\"200\" y2=\"50\" stroke=\"black\" stroke-width=\"4\" />\n</svg>\n`);\n  }\n  else if(sigh===\"CODEB\"){\n    return(\n`<svg width=\"200px\" height=\"200px\" viewbox=\"0 0 200 200\">\n  <!-- 四角 -->\n  <rect x=\"50\" y=\"50\" width=\"100\" height=\"100\" stroke=\"black\" stroke-width=\"4\" fill=\"none\" />\n</svg>\n`);\n  }\n  else if(sigh===\"CODEC\"){\n    return(\n`<svg width=\"200px\" height=\"200px\" viewbox=\"0 0 200 200\">\n  <!-- 円 -->\n  <circle cx=\"100\" cy=\"100\" r=\"50\" stroke=\"black\" stroke-width=\"4\" fill=\"none\"/>\n</svg>\n`);\n}\n\n  else if(sigh===\"CODED\"){\n    return(\n      `\n<svg width=\"200px\" height=\"200px\" viewbox=\"0 0 200 200\">\n  <!-- 円 -->\n  <circle cx=\"100\" cy=\"100\" r=\"50\" stroke=\"black\" stroke-width=\"4\" fill=\"#ff1493\">\n    <animate attributeName=\"r\" from=\"50\" to=\"80\" dur=\"1s\" fill=\"freeze\">\n    </animate>\n  </circle>\n</svg>\n      `\n    )\n  }\n\n  else if(sigh===\"CODEE\"){\n    return(\n      `\n<svg width=\"200px\" height=\"200px\" viewbox=\"0 0 200 200\">\n  <!-- 円 -->\n  <circle class=\"c\" cx=\"100\" cy=\"100\" r=\"50\" stroke=\"black\" stroke-width=\"4\" fill=\"#ff1493\">\n  </circle>\n</svg>\n\n<style>\n  .c{\n    r: 50;\n    animation-name: scaleAnime;\n    animation-duration: 1s;\n    animation-timing-function:linear;\n    animation-fill-mode: forwards;\n  }\n\n  @keyframes scaleAnime{\n    100%{\n      r:80;\n    }\n  }\n</style>\n      `\n    )\n  }\n};\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getMoveNextSlide,\n  getMovePrevSlide,\n  getOpenMenu,\n  getCloseMenu\n} from \"../actions/actions.js\";\n\nconst EmptyContainerForEventListener = ({\n  isMenuOpen,\n  moveNextSlideHandler,\n  movePrevSlideHandler,\n  openMenuHandler,\n  closeMenuHandler\n}) => {\n  const keyfunction = event => {\n    /*\n    // esc が押された\n    if (event.keyCode === 27) {\n      isMenuOpen === true ? closeMenuHandler() : openMenuHandler();\n    }\n    // 左矢印が押された\n    else if (event.keyCode === 37) {\n      movePrevSlideHandler();\n    }\n    // 右矢印が押された\n    else if (event.keyCode === 39) {\n      moveNextSlideHandler();\n    }*/\n  };\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyfunction);\n    return () => {\n      document.removeEventListener(\"keydown\", keyfunction);\n    };\n  });\n  return <div />;\n};\nconst mapStateToProps = state => {\n  return {\n    isMenuOpen: state.isMenuOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const moveNextSlideAction = getMoveNextSlide();\n  const movePrevSlideAction = getMovePrevSlide();\n  const openMenuAction = getOpenMenu();\n  const closeMenuAction = getCloseMenu();\n  return {\n    moveNextSlideHandler: () => dispatch(moveNextSlideAction),\n    movePrevSlideHandler: () => dispatch(movePrevSlideAction),\n    openMenuHandler: () => dispatch(openMenuAction),\n    closeMenuHandler: () => dispatch(closeMenuAction)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmptyContainerForEventListener);\n","import React from \"react\";\nimport AppContainer from \"./AppContainer.js\";\nimport EmptyContainerForEventListener from \"./EmptyContainerForEventListener.js\";\n\nconst App = () => (\n  <div>\n    <AppContainer />\n    <EmptyContainerForEventListener />\n  </div>\n);\n\nexport default App;\n","import {\n  OPEN_MENU,\n  CLOSE_MENU,\n  MOVE_NEXT_SLIDE,\n  MOVE_PREV_SLIDE,\n  CHANGE_PROGRESSBAR_ON,\n  CHANGE_PROGRESSBAR_OFF,\n  CHANGE_THEME_SIMPLE,\n  CHANGE_THEME_DARK,\n  CHANGE_THEME_CLEARSKY,\n  CREATE_SLIDES\n} from \"../constants/constants.js\";\nimport { THEME_SIMPLE, THEME_DARK, THEME_CLEARSKY } from \"../constants/constants.js\";\n\nconst reducer = (state = {}, action) => {\n  if (action.type === MOVE_NEXT_SLIDE) {\n    if (state.index >= state.slides.length - 1) return state;\n    const nowIndex = state.index + 1;\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: state.theme,\n      index: nowIndex,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === MOVE_PREV_SLIDE) {\n    if (state.index <= 0) return state;\n    const nowIndex = state.index - 1;\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: state.theme,\n      index: nowIndex,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === CHANGE_PROGRESSBAR_ON) {\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: true,\n      theme: state.theme,\n      index: state.index,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === CHANGE_PROGRESSBAR_OFF) {\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: false,\n      theme: state.theme,\n      index: state.index,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === CREATE_SLIDES) {\n    const htmlList = action.payload.htmlList;\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: state.theme,\n      index: state.index,\n      slides: htmlList\n    };\n    return newState;\n  } else if (action.type === OPEN_MENU) {\n    const newState = {\n      isMenuOpen: true,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: state.theme,\n      index: state.index,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === CLOSE_MENU) {\n    const newState = {\n      isMenuOpen: false,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: state.theme,\n      index: state.index,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === CHANGE_THEME_SIMPLE) {\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: THEME_SIMPLE,\n      index: state.index,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === CHANGE_THEME_DARK) {\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: THEME_DARK,\n      index: state.index,\n      slides: state.slides\n    };\n    return newState;\n  } else if (action.type === CHANGE_THEME_CLEARSKY) {\n    const newState = {\n      isMenuOpen: state.isMenuOpen,\n      isProgressBarAppeared: state.isProgressBarAppeared,\n      theme: THEME_CLEARSKY,\n      index: state.index,\n      slides: state.slides\n    };\n    return newState;\n  } else {\n    const initialState = {\n      isMenuOpen: false,\n      isProgressBarAppeared: true,\n      theme: THEME_SIMPLE,\n      index: 0,\n      slides: []\n    };\n    return initialState;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App.js\";\nimport reducer from \"./reducers/reducer.js\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { getCreateSlides } from \"./actions/actions.js\";\nimport { convertMarkdownToHtml } from \"./utils/convertMarkdownToHtml\";\nimport markdownPath from \"./content.md\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nfetch(markdownPath)\n  .then(res => res.text())\n  .then(text => {\n    const htmlList = convertMarkdownToHtml(text);\n    store.dispatch(getCreateSlides(htmlList));\n  });\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"app\")\n);\n","import marked from \"marked\";\n\n/**\n * 生のmarkdown をhtml のリストに変換する\n * @param {string} raw - markdown\n * @return {string[]} htmlList - htmlの文字列リスト\n */\nexport const convertMarkdownToHtml = raw => {\n  marked.setOptions({ headerIds: false });\n  const raws = raw.split(\"---\");\n  const htmls = raws.map(markdown => {\n    const html = marked(markdown);\n    return html;\n  });\n  return htmls;\n};\n"],"sourceRoot":""}